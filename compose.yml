services:
  mongodb:
    # Initialise a Mongo cluster with a replicaset of 1 node.
    # Based on https://medium.com/workleap/the-only-local-mongodb-replica-set-with-docker-compose-guide-youll-ever-need-2f0b74dd8384
    # Since we are using transactions, we require a replicaset. Local dev with docker compose uses 1 node below, but our live
    # environments have multiple nodes.
    # The replicaset needs initialising, so the healthcheck can be hijacked to initialise this so that it can keep retrying
    # until the operation is successful (might need to wait a while after container boot for this to work, hence the interval/retries)
    # WARNING: do not turn on authentication, otherwise will need to deal with generating key pairs and sharing them between
    # the replicaset nodes. For local development this is overkill, so just turn off auth and connect to Mongo without creds.
    image: mongo:6.0.13
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    ports:
      - "27017:27017"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'host.docker.internal:27017'}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30
    volumes:
      - mongodb-data:/data
    restart: always

  comparer:
    build:
      args:
        DEFRA_NUGET_PAT: ${DEFRA_NUGET_PAT}
    depends_on:
      mongodb:
        condition: service_healthy
      localstack:
        condition: service_healthy
    env_file:
      - 'compose/aws.env'
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ENVIRONMENT: local
      Mongo__DatabaseUri: mongodb://mongodb:27017/?directConnection=true
      SQS_ENDPOINT: http://localstack:4566
      AWS_EMF_ENVIRONMENT: Local
      Acl__Clients__IntegrationTests__Secret: integration-tests-pwd
      Acl__Clients__IntegrationTests__Scopes__0: read
      Acl__Clients__IntegrationTests__Scopes__1: write
      Btms__OperatingMode: 1 # ConnectedSilentRunning
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/all"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 5s
      
  comparer-trialcutover:
    build:
      args:
        DEFRA_NUGET_PAT: ${DEFRA_NUGET_PAT}
    depends_on:
      mongodb:
        condition: service_healthy
      localstack:
        condition: service_healthy
    env_file:
      - 'compose/aws.env'
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ENVIRONMENT: local
      ASPNETCORE_URLS: http://+:8081
      Mongo__DatabaseUri: mongodb://mongodb:27017/?directConnection=true
      SQS_ENDPOINT: http://localstack:4566
      AWS_EMF_ENVIRONMENT: Local
      Acl__Clients__IntegrationTests__Secret: integration-tests-pwd
      Acl__Clients__IntegrationTests__Scopes__0: read
      Acl__Clients__IntegrationTests__Scopes__1: write
      Btms__OperatingMode: 2 # TrialCutover
      Btms__DecisionSamplingPercentage: 100
      FinalisationsConsumer__QueueName: trade_imports_data_upserted_decision_comparer_trialcutover
    ports:
      - "8081:8081"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8081/health/all" ]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 5s
  
  localstack:
    image: localstack/localstack
    ports:
      - '4566:4566' # LocalStack Gateway
      - '4510-4559:4510-4559' # external services port range
    env_file:
      - 'compose/aws.env'
    environment:
      DEBUG: ${DEBUG:-1}
      LS_LOG: info # Localstack DEBUG Level
      SERVICES: sqs
      TZ: Europe/London
    volumes:
      - '${TMPDIR:-/tmp}/localstack:/var/lib/localstack'
      - ./compose/start-localstack.sh:/etc/localstack/init/ready.d/start-localstack.sh
    healthcheck:
      test: cat /tmp/ready
      interval: 5s
      start_period: 5s
      retries: 10

volumes:
  mongodb-data:
